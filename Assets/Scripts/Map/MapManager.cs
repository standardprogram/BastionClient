using System;using System.Collections.Generic;using UnityEngine;public class MapManager:MonoBehaviour{	private MapNet net;	private Dictionary<Location, MapTile> mapCache;	private Texture2D curTexture;	public void Awake() {		net = new MapNet ();		mapCache = new List<MapTile> ();	}		private int findMapInCache(Location loc) {		foreach (Location other in mapCache.Keys) {			if (loc.GetDistance(other) < 1.5f ) {				if(mapCache[other] == null || mapCache[other] == curTexture)					return 3;				else {					curTexture= mapCache[other];					return 1;				}			}		}		mapCache.Add(loc,null);		curTexture = null;		return 2;	}	public void RefreshMap(Location location) {		MapTile tile = FindFromCache ();		if (tile == null) {			tile = LoadFromFile();			AddToCache();		}		if (tile == null) {			DownloadMapTile();			AddToCache();			SaveToFile();		}		switch (findMapInCache (location)) {		case 1:	//texture is in cache, draw it			obj.renderer.material.mainTexture = curTexture;			break;		case 2:	//texture is not in cache, start coroutine to download			StartCoroutine(net.DownloadMapTile (location, this));			break;		default://texture is downloading, nothing to do			Debug.Log("Texture is downloading:"+location.toString());			break;		}	}	private void 	public void AddMapTile(MapTile tile, bool isShow) {		mapCache.Add (tile);		if (isShow) {			GameObject obj = GameObject.FindGameObjectWithTag ("WorldMap");			if (obj != null) {				obj.renderer.material.mainTexture = tile.Texture;			}		}	}}